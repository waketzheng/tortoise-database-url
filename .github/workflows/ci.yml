# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11, 3.12, 3.13, 3.14]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: actions/cache@v4
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('**/uv.lock') }}
      - uses: astral-sh/setup-uv@v6
      - uses: astral-sh/ruff-action@v3
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          use_uv: true
        if: ${{ matrix.python-version != '3.14' }}
      - name: Set up PDM by pipx
        run: |
          pip install --user --upgrade pipx pip
          pipx install pdm
        if: ${{ matrix.python-version == '3.14' }}
      - name: Check code style and Type Hint then Test with pytest
        run: uv run make ci
      - name: Upload Coverage
        run: uvx "coveralls @ git+https://github.com/waketzheng/coveralls-python" --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: astral-sh/setup-uv@v6
      - name: Finished
        run: uvx "coveralls @ git+https://github.com/waketzheng/coveralls-python" --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
